"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#c!fnbvlqhv^zi)#zf4fc48q6dx6ifb4t-ouips9lng(n$#p^('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '127.0.0.1',
    '.amazonaws.com',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.humanize',     #템플릿에 세자리 콤마찍기위해(필터) 앱 추가
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'mathfilters',    #빼기 곱하기 나누기 를 위해 설치
    'storages',     #s3
    'accounts',
    'accounts02',
    'chartit',
    'vund',
    'pentions',
    'pentions01',
    'pentionsto',
    'blog01',
    'funds',
    'cart',
    'coupon',
    'orders',
    'orders02',
    'shop',
    'orders03',
    'orders04',
    'orders05',
    'orders06',
    'orders07',
    'disqus',                         #댓글달기추가01
    'django.contrib.sites',            #댓글달기추가02

]

DISQUS_WEBSITE_SHORTNAME = 'hy-solution'     #댓글달기추가03
SITE_ID = 1                                  #댓글달기추가04

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR,'templates') ],   #장고의 템플릿 위치를 알려주기위한것
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':'django.db.backends.mysql',
        'NAME': 'hysolution',
        'USER':'hysolution',
        'PASSWORD':'tmdwn1008',
        'HOST':'hysolution.c6y5xdqno8sd.ap-northeast-2.rds.amazonaws.com',
        'port':'3306',
    }
}

#DATABASES = {
#    'default': {
#        'ENGINE':'django.db.backends.mysql',
#        'NAME': 'test',
#        'USER':'root',
#        'PASSWORD':'tmdwn1008',
#        'HOST':'localhost',
#        'port':'3306',
#    }
#}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



import pymysql

pymysql.install_as_MySQLdb()



# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

AWS_ACCESS_KEY_ID = 'AKIAY2MTDJVANAMWRW6A'
AWS_SECRET_ACCESS_KEY = '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'
AWS_REGION = 'ap-northeast-2'
AWS_STORAGE_BUCKET_NAME = 'hysolution'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.%s.amazonaws.com' % (AWS_STORAGE_BUCKET_NAME,AWS_REGION)
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

DEFAULT_FILE_STORAGE = 'mysite.asset_storage.MediaStorage'


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



LOGIN_REDIRECT_URL = '/'    #인증기능 구현시 추가한 것임(2018년 5월 24일)

DATE_INPUT_FORMATS = ['%Y-%m-%D']     #날짜형식땜에 추가한 것임

CART_ID = 'cart_in_session'